name: Python Package

on:
    push:
      branches: [ main ]

jobs:
    deploy:
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          python-version: [3.8]
      
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_USERNAME: ${{ secrets.DB_USERNAME }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      steps:
      - uses: actions/checkout@main
      - uses: actions/setup-python@v2
      - name: Initialize Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: ${{matrix.python-version}}
      - name: Install dependencies 
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: push to Dockerhub
        uses: docker/build-push-action/@v1
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          repository: ${{secrets.DOCKERHUB__REPO}}
          tag_with_ref: true
          labels: latest
      
      - name: terraform init
        working-directory: ./iac
        run: |
          terraform init
      
      - name: terraform validation
        working-directory: ./iac
        run: |
          terraform fmt
          terraform validate

      - name: Plan Creation
        working-directory: ./iac
        run: |
          terraform plan
      
      - name: terraform apply
        working-directory: ./iac
        run: |
          terraform apply -auto-approve
      - name: deploy pods
        working-directory: ./k8s
        run: |
          aws eks --region us-east-1 update-kubeconfig --name flask-cluster
          kubectl apply -f .
          kubectl set env deployment/flask-app DB_HOST=${{ secrets.DB_HOST }} DB_NAME=${{ secrets.DB_NAME }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_USERNAME=${{ secrets.DB_USERNAME }}
          kubectl get svc

      - name: create r53 record
        working-directory: ./scripts
        run: |
          pip install boto3
          python createRecord.py
          




